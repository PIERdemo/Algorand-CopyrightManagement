#pragma version 8
intcblock 127 0 8 1
bytecblock 0x000102030405060708090a0b0c0d0e0f
txn NumAppArgs
intc_1 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x5ad32bff // "set_right(uint64,uint64)void"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0x4d87411a // "get_right(uint64)uint64"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_1 // NoOp
==
txn ApplicationID
intc_1 // 0
!=
&&
assert
callsub getrightcaster_7
intc_3 // 1
return
main_l5:
txn OnCompletion
intc_1 // NoOp
==
txn ApplicationID
intc_1 // 0
!=
&&
assert
callsub setrightcaster_6
intc_3 // 1
return
main_l6:
txn OnCompletion
intc_1 // NoOp
==
bnz main_l10
txn OnCompletion
intc_3 // OptIn
==
bnz main_l9
err
main_l9:
txn ApplicationID
intc_1 // 0
!=
assert
callsub optin_3
intc_3 // 1
return
main_l10:
txn ApplicationID
intc_1 // 0
==
assert
intc_3 // 1
return

// zero_impl
zeroimpl_0:
proto 1 0
frame_dig -1
pushbytes 0x00 // 0x00
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x01 // 0x01
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x02 // 0x02
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x03 // 0x03
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x04 // 0x04
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x05 // 0x05
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x06 // 0x06
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x07 // 0x07
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x08 // 0x08
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x09 // 0x09
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x0a // 0x0a
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x0b // 0x0b
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x0c // 0x0c
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x0d // 0x0d
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x0e // 0x0e
intc_0 // 127
bzero
app_local_put
frame_dig -1
pushbytes 0x0f // 0x0f
intc_0 // 127
bzero
app_local_put
retsub

// get_byte_impl
getbyteimpl_1:
proto 2 1
frame_dig -2
bytec_0 // 0x000102030405060708090a0b0c0d0e0f
frame_dig -1
intc_0 // 127
/
intc_3 // 1
extract3
app_local_get
frame_dig -1
intc_0 // 127
%
getbyte
retsub

// set_byte_impl
setbyteimpl_2:
proto 3 0
bytec_0 // 0x000102030405060708090a0b0c0d0e0f
frame_dig -2
intc_0 // 127
/
intc_3 // 1
extract3
store 0
frame_dig -3
load 0
frame_dig -3
load 0
app_local_get
frame_dig -2
intc_0 // 127
%
frame_dig -1
setbyte
app_local_put
retsub

// opt_in
optin_3:
proto 0 0
txn Sender
callsub zeroimpl_0
retsub

// set_right
setright_4:
proto 2 0
frame_dig -1
intc_1 // 0
==
frame_dig -1
intc_3 // 1
==
||
assert
frame_dig -2
pushint 16 // 16
intc_2 // 8
*
intc_0 // 127
*
<
assert
txn Sender
frame_dig -2
intc_2 // 8
/
callsub getbyteimpl_1
pushint 7 // 7
frame_dig -2
intc_2 // 8
frame_dig -2
intc_2 // 8
/
*
-
-
getbit
frame_dig -1
!=
assert
txn Sender
frame_dig -2
intc_2 // 8
/
txn Sender
frame_dig -2
intc_2 // 8
/
callsub getbyteimpl_1
pushint 7 // 7
frame_dig -2
intc_2 // 8
frame_dig -2
intc_2 // 8
/
*
-
-
frame_dig -1
setbit
callsub setbyteimpl_2
retsub

// get_right
getright_5:
proto 1 1
intc_1 // 0
frame_dig -1
pushint 16 // 16
intc_2 // 8
*
intc_0 // 127
*
<
assert
txn Sender
frame_dig -1
intc_2 // 8
/
callsub getbyteimpl_1
pushint 7 // 7
frame_dig -1
intc_2 // 8
frame_dig -1
intc_2 // 8
/
*
-
-
getbit
frame_bury 0
retsub

// set_right_caster
setrightcaster_6:
proto 0 0
intc_1 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
frame_dig 0
frame_dig 1
callsub setright_4
retsub

// get_right_caster
getrightcaster_7:
proto 0 0
intc_1 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 1
frame_dig 1
callsub getright_5
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub